# -*- coding: utf-8 -*-
"""find_words_final.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qWG9ghcCWsqvlIhWaD2uTDIZ12AkN3Y_
"""

import string
import numpy as np

# array with medical terms / terms to look for
allTerms = (['hi', 'look', 'food'])
thisdict = {
  "broken": ["surgery"],
  "fracture": ["surgery"],
  "bleeding": ["trauma"],
  }

# Dogs found!
def extract(s1):
  # split sentence
  arrA = str.split(s1)
  #create empty array to return
  arrFinal = np.array([])

  # loop through for words contained in "allTerms" array
  for x in arrA:
    temp1 = x.lower()
    temp1 = temp1.translate(str.maketrans('','', string.punctuation))
    if temp1 in thisdict:
      arrTemp = np.array([])
      arrFinal = np.append(arrTemp, temp1)
      print(arrFinal)
      print(thisdict[temp1])      
  return(arrFinal)



#testing
s2 = 'Hi, my name is Eric and I am bleeding '
arrTest = extract(s2)

import string
import numpy as np
riskdict = {
  "High risk": ["death","serious", "traumatic", "deadly", "suicide", "crash","heart", "cardiac", "unconscious", "stroke" ],
  }
depdict = {
  "Bone": ["broken", "fracture"],
  "FirstAid": ["injured", "bruise" , "numb", "cut", "swelling"],
  "Neurological": ["faint", "concussion", "dizzy", "headache", "consciousness", "brain", "numb", "migraines", "paralysis", "paralyze", "unconscious", "confusion"],
  "Trauma": ["bleeding", "dizzy"],
  "phychiatry": ["suicide", "trauma", "shock", "panic", "panic attack", "anxiety", "murder", "manslaughter"],
  "cardiology": ["cardiac-arrest", "heart", "stroke"],
  "paediatrics": ["kid", "child", "kids", "children", "baby", "infant"],
  "neonatal": ["miscarriage", "pregnant", "newborn", "pregnancy", "labor", "expectant"]
}
s1 = 'Hi, my name is Eric and I am bleeding from a pregnancy bone, cardiac, heart , crash'
new_dict = {}
arrA = str.split(s1)
#create empty array to return
arrFinal = np.array([])
for x in arrA:
    word = x.lower().strip
    word = x.translate(str.maketrans('','', string.punctuation))
    for key, value in depdict.items():
      if word in value:
        arrTemp = np.array([])
        arrFinal = np.append(arrTemp, key)
        if key in new_dict.keys():
          new_dict[key].append(word)
        else:
          new_dict[key] = [word]

print(new_dict)  
new_dict = {}
arrA = str.split(s1)
#create empty array to return
arrFinal = np.array([])
for x in arrA:
    word = x.lower().strip
    word = x.translate(str.maketrans('','', string.punctuation))
    for key, value in riskdict.items():
      if word in value:
        arrTemp = np.array([])
        arrFinal = np.append(arrTemp, key)
        if key in new_dict.keys():
          new_dict[key].append(word)
        else:
          new_dict[key] = [word]

print(new_dict)